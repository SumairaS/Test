pipeline {
    agent any

    environment {
        DOCKER_IMAGE = '10.25.10.28/my_first_project/nginx-html'
        CONTAINER_NAME = 'my-nginx-container'
    }

    stages {
        stage('Check for Harbor Image Update') {
            steps {
                script {
                    // Pull the latest image from Harbor
                    def newImageId = sh(script: "docker pull ${DOCKER_IMAGE}:latest | tail -1 | awk '{print \$3}'", returnStdout: true).trim()

                    // Get the current running container image ID
                    def currentImageId = sh(script: "docker inspect --format='{{.Image}}' ${CONTAINER_NAME} || echo ''", returnStdout: true).trim()

                    // Compare the image IDs
                    if (newImageId != currentImageId) {
                        echo "New image found. Updating the container."

                        // Stop and remove the old container if it exists
                        sh "docker stop ${CONTAINER_NAME} || true"
                        sh "docker rm ${CONTAINER_NAME} || true"

                        // Run the updated image in a new container
                        sh "docker run -d -p 8080:80 --name ${CONTAINER_NAME} ${DOCKER_IMAGE}:latest"
                    } else {
                        echo "No new updates found. Current container is up-to-date."
                    }
                }
            }
        }
    }
}